services:
 
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: ["redis-server", "--maxmemory", "512mb", "--maxmemory-policy", "allkeys-lru"]

  redis-service:
    build:
      context: .
      dockerfile: redis/Dockerfile
    ports:
      - "5000:5000"
    container_name: redis-service
    environment:
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      - redis

  # # --- ADD THE NEW FIREBASE EMULATOR SERVICE ---
  # firebase-emulator:
  #   build:
  #     context: ./firebase-emulator # Use the Dockerfile we created
  #   ports:
  #     - "4000:4000" # Emulator UI
  #     - "8080:8080" # Firestore Emulator
  #   volumes:
  #     - .:/app # Mount project root to access firebase.json
  #   # Command to start only the Firestore emulator
  #   # The --host 0.0.0.0 flag is crucial for it to be accessible from other containers
  #   command: >
  #     firebase emulators:start --only firestore --project cs144-airline-checkin
  # # # ---------------------------------------------

  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "1919:1919"
    container_name: backend
    environment:
      # --- THIS IS THE UPDATED LINE ---
      # Point to the new service by its container name 'firebase-emulator'
      # Uncomment the line below to use the emulator
      # # FIRESTORE_EMULATOR_HOST: "firebase-emulator:8080"
      # --------------------------------
      redis_service: "http://redis-service:5000"
      SEED: "42"
    depends_on:
      - redis
      - redis-service
      # - firebase-emulator # Make backend wait for the emulator to start

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_BASE: "http://backend:1919"
      redis_service: "http://redis-service:5000"
    depends_on:
      - backend