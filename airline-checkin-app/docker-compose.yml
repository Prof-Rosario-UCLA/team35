



services:
  
  redis:
    image: redis:7
    ports:
      - "6379:6379"

  # Cache service for Redis
  # This service is used to cache flight bookings
  redis-service:
    build:
      context: .
      dockerfile: redis/Dockerfile
    ports:
      - "5000:5000"
    container_name: redis-service
    environment:
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      - redis


  # # Backend service for handling flight bookings
  # # This service is responsible for managing static flight data, and proxies the redis db
  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "1919:1919"   # map host 1919 → container 1919
    container_name: backend
    environment:
      redis_service: "http://redis-service:5000" # URL for the Redis service
      SEED: "42"
    depends_on:
      - redis
      - redis-service

  # Frontend service for the user interface
  # This service serves the React application
  frontend:
      build:
        context: ./frontend
        dockerfile: ./Dockerfile
      ports:
        - "3000:80"       # map host 3000 → container 80
      environment:
        REACT_APP_API_BASE: "http://backend:1919" # API URL for the frontend to communicate with the backend
        redis_service: "http://redis-service:5000" # URL for the frontend to communicate with the Redis service
      depends_on:
         - backend

  # # Test service for running tests
  # tests:
  #   build:
  #     context: .
  #     dockerfile: redis/Dockerfile.test
  #   # Do NOT use network_mode: "host" here.
  #   # Instead, rely on host.docker.internal to reach the host machine.
  #   environment:
  #     REDIS_URL: "redis://host.docker.internal:6379/0"
  #     GRPC_TARGET: "host.docker.internal:5000"
  #   depends_on:
  #     - redis-service
    