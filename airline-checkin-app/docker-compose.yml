



services:
  
  redis:
    image: redis:7
    ports:
      - "6379:6379"

  # Cache service for Redis
  # This service is used to cache flight bookings
  redis-service:
    build:
      context: .
      dockerfile: redis/Dockerfile
    ports:
      - "5000:5000"
    environment:
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      - redis


  # # Backend service for handling flight bookings
  # # This service is responsible for managing static flight data
  # backend:
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     REDIS_URL: "redis://redis:6379/0"
  #     NUM_FLIGHTS: "10"
  #     SEED: "42"
  #   depends_on:
  #     - redis

  # Frontend service for the user interface
  # This service serves the React application
  frontend:
      build:
        context: ./frontend
        dockerfile: ./Dockerfile
      ports:
        - "3000:80"       # map host 3000 â†’ container 80
      environment:
        #REACT_APP_API_URL: "http://backend:4000" # API URL for the frontend to communicate with the backend
        Redis_Service_URL: "http://redis-service:5000" # URL for the frontend to communicate with the Redis service
      depends_on:
        - redis-service
        # - backend

  # # Test service for running tests
  tests:
    build:
      context: .
      dockerfile: redis/Dockerfile.test
    # Do NOT use network_mode: "host" here.
    # Instead, rely on host.docker.internal to reach the host machine.
    environment:
      REDIS_URL: "redis://host.docker.internal:6379/0"
      GRPC_TARGET: "host.docker.internal:5000"
    depends_on:
      - redis-service
    