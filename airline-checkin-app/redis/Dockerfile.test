# redis/Dockerfile.test

# 1) Use the same base as your application
FROM python:3.11-slim

# 2) Set a working directory where we’ll do the compilation
WORKDIR /usr 


# 8) Copy the runtime dependencies (only grpcio, redis, etc.—no grpcio-tools)
#    ───────────────────────────────────────────────────────
COPY redis/requirements.txt ./requirements.txt
RUN pip install --no-cache-dir -r requirements.txt


COPY protos/ ./proto/
COPY redis/src/ ./src/


# 9) Generate Python code from your .proto files
#    ────────────────────────────────────────────────────────────────
RUN python -m grpc_tools.protoc \
      --proto_path=proto \
      --python_out=src/generated \
      --grpc_python_out=src/generated \
      proto/redis.proto \
      proto/common.proto

COPY redis/src/generated/__init__.py src/generated/

# 8) Copy in the pytest suite
COPY redis/test_redis_integration.py src/
ENV PYTHONPATH=/usr/src/generated

# 9) By default, this container will run pytest when started
ENTRYPOINT ["sh", "-c", "cd src && python -m pytest . -q --maxfail=1"]







