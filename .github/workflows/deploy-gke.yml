name: Deploy to GKE

on:
  push:
    branches:
      - main  # or your deploy branch
  workflow_dispatch:

jobs:
  deploy:
    name: Build, push, deploy to GKE
    runs-on: ubuntu-latest
    # Working directory is from airline-checkin-app, not root
    defaults:
      run:
        working-directory: ./airline-checkin-app

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Docker to use GCR
      run: gcloud auth configure-docker

    # --- Create service account key file for backend build ---
    - name: Create service account key file
      run: |
        echo "${{ secrets.GCP_SA_KEY_JSON }}" > server/serviceAccountKey.json

    # --- Create .env file for backend build ---
    - name: Create .env file
      run: |
        cat << EOF > server/.env
        REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}
        REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
        REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
        REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
        REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
        REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}
        EOF

    # --- Build and push backend ---
    - name: Build backend image
      run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest -f server/Dockerfile .

    - name: Push backend image
      run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest

    # --- Build and push frontend ---
    - name: Build frontend image
      run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest -f frontend/Dockerfile .

    - name: Push frontend image
      run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest

    # --- Build and push redis-service ---
    - name: Build redis-service image
      run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/redis-service:latest -f redis/Dockerfile .

    - name: Push redis-service image
      run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/redis-service:latest

    # --- Deploy to GKE ---
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials cs144 --region us-west1

    - name: Deploy to GKE
      run: |
        kubectl apply -f backend-deployment.yaml
        kubectl apply -f frontend-deployment.yaml
        kubectl apply -f redis-service-deployment.yaml
        kubectl apply -f redis-deployment.yaml
        kubectl apply -f backend-service.yaml
        kubectl apply -f frontend-service.yaml
        kubectl apply -f redis-service-service.yaml
        kubectl apply -f redis-service.yaml
        kubectl apply -f redis.yaml
